function g_linePlotPerPatient(data_subset, numPats, graphTitle, XLabel_str, YLabel_str, xAxisLabels, printGraph)
% example:  g_linePlotPerPatient(data_subset, configs.numPats, 'teste', 'XLabel', 'YLabel',{'','',''}, 1)

% colors
colorsPerPat = copper(numPats);
numPnts = size(data_subset,2);

% Create Graph
figure('Units', 'pixels', ...
    'Position', [100 100 1000 600]);

hold on;

%% for each patient
for r = 1:numPats
    
    % per run
    eval (['hData' num2str(r) '= line( 1:numPnts, data_subset(r,:));'])
    
    set( eval (['hData' num2str(r)])    , ...
        'Color'           , colorsPerPat(r,:), ...
        'LineStyle'       , '-'         , ...
        'LineWidth'       , .5           , ...
        'Marker'          , 'o'         , ...
        'MarkerSize'      , 5           , ...
        'MarkerEdgeColor' , 'none'      , ...
        'MarkerFaceColor' , colorsPerPat(r,:) );
    
    p1 = polyfit(1:numPnts, data_subset(r,:), 1); %[Mx+B]
    
    hDataPF = line( 1:numPnts, polyval(p1,1:numPnts) );
    
    set(  hDataPF  , ...
        'Color'           , colorsPerPat(r,:), ...
        'LineStyle'       , '-'         , ...
        'LineWidth'       , 3            );
end


hLegend = legend( ...
    [   hData1,    ...
    hData2,  ...
    hData3,  ...
    hData4,  ...
    hData5,  ...
    hData6,  ...
    hData7,  ...
    hData8,  ...
    hData9,  ...
    hData10,  ...
    hData11,  ...
    hData12,  ...
    hData13,  ...
    hData14,  ...
    hData15], ...
    'Patient #1' , ...
    'Patient #2' , ...
    'Patient #3' , ...
    'Patient #4' , ...
    'Patient #5' , ...
    'Patient #6' , ...
    'Patient #7' , ...
    'Patient #8' , ...
    'Patient #9' , ...
    'Patient #10' , ...
    'Patient #11' , ...
    'Patient #12' , ...
    'Patient #13' , ...
    'Patient #14' , ...
    'Patient #15' , ...
    'location', 'NorthEastoutside' );

hTitle  = title ( graphTitle );
hXLabel = xlabel( XLabel_str );
hYLabel = ylabel( YLabel_str   );

set( gca                       , ...
    'FontName'   , 'Helvetica' );
set([hTitle, hXLabel, hYLabel], ...
    'FontName'   , 'AvantGarde');

set(gca, ...
    'Box'         , 'off'       , ...
    'TickDir'     , 'out'       , ...
    'TickLength'  , [.02 .02]   , ...
    'XMinorTick'  , 'off'       , ...
    'YMinorTick'  , 'on'        , ...
    'YGrid'       , 'on'        , ...
    'XColor'      , [.3 .3 .3]  , ...
    'YColor'      , [.3 .3 .3]  , ...
    'YTick'       , floor (min (min (data_subset) ) ):1:ceil(max (max (data_subset) ) ), ...
    'XTick'       , 1:1:numPnts       , ...
    'XTickLabel'  , xAxisLabels , ...
    'YLim'        , [floor(min (min (data_subset) ) ), ceil(max (max (data_subset) ) )], ...
    'XLim'        , [1-.3,numPnts+.3],...
    'LineWidth'   , 1           );

set(gcf, 'PaperPositionMode', 'auto');

if printGraph
    eval( ['print -dpng ' graphTitle] )
    close;
end

end

% {'Session #1', 'Session #2', 'Session #3', 'Session #4', 'Session #5'}
% 'XTickLabel'  , {'train', 'neurofeedback #1', 'neurofeedback #2', 'transfer'}, ...
